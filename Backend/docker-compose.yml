version: "1.0"

services:
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
    restart: always
    network_mode: host
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=bits-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
  kibana:
    image: docker.elastic.co/kibana/kibana:5.5.3
    restart: always
    network_mode: host
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://localhost:9200
  redis-server:
    container_name: redis
    image: redis:6.2-alpine
    ports:
      - "16379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass "123456a@"
    volumes:
      - cache:/data
  mysqldb:
    image: mysql:8.0.4
    platform: linux/x86_64
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=finding_tutor
    ports:
      - "3307:3306"
    volumes:
      - ./database_storage/FINDING_TUTOR_V1.sql:/docker-entrypoint-initdb.d/FINDING_TUTOR_V1.sql
  app:
    depends_on:
      - mysqldb
    build:
      context: .
      dockerfile: Dockerfile
    container_name: find_tutor_be
    links:
      - redis-server
    ports:
      - "8081:8082"
    environment:
      server.port: 8082
      spring.datasource.url: jdbc:mysql://192.168.1.71:3307/finding_tutor
      spring.datasource.username: group01
      spring.datasource.password: 123456a@
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      spring.jpa.generate-ddl: false
      spring.jpa.hibernate.ddl-auto: update
      spring.flyway.baseline-on-migrate: true
    networks:
      - spring-boot-mysql-network
networks:
  spring-boot-mysql-network:
    driver: bridge
volumes:
  esdata:
    driver: local
  cache:
    driver: local