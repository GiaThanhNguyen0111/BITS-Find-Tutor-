version: "1.0"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    container_name: sem_elasticsearch
    ports:
      - "9200:9200"
      # restart: on-failure
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://${HOST}:9200
      SERVER_NAME: "127.0.0.1"
  redis-server:
    container_name: redis
    image: redis:6.2-alpine
    ports:
      - "16379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass "123456a@"
    volumes:
      - cache:/data
  logstash:
    build:
      context: .
      dockerfile: Dockerfile-logstash
    container_name: logstash
    links:
      - elasticsearch
      - mariadb
    depends_on:
      - mariadb
      - elasticsearch
    volumes:
      - ./volumes/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./volumes/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./volumes/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./volumes/logstash/config/queries/:/usr/share/logstash/config/queries/
      - ./volumes/logstash/mariadb-java-client-2.4.3.jar:/usr/share/logstash/logstash-core/lib/jars/mariadb-java-client-2.4.3.jar
  mariadb:
    image: mariadb
    platform: linux/x86_64
    restart: unless-stopped
    networks:
      - spring-boot-mysql-network
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=finding_tutor
    ports:
      - "3307:3306"
    volumes:
      - ./database_storage/FINDING_TUTOR_V1.sql:/docker-entrypoint-initdb.d/FINDING_TUTOR_V1.sql
  app:
    depends_on:
      - mariadb
    build:
      context: .
      dockerfile: Dockerfile
    container_name: find_tutor_be
    links:
      - redis-server
    ports:
      - "8081:8082"
    environment:
      server.port: 8082
      spring.datasource.url: jdbc:mariadb://${HOST}:3307/finding_tutor
      spring.datasource.username: group01
      spring.datasource.password: 123456a@
      spring.datasource.driver-class-name: org.mariadb.jdbc.Driver
      spring.jpa.generate-ddl: false
      spring.jpa.hibernate.ddl-auto: update
      spring.flyway.baseline-on-migrate: true
    networks:
      - spring-boot-mysql-network
networks:
  spring-boot-mysql-network:
    driver: bridge
volumes:
  esdata:
    driver: local
  cache:
    driver: local